name: "Create Conan Package"
on:
  workflow_call:
    inputs:
      name:
        required: false
        type: string
        default: "Create package"
      image:
        required: false
        type: string
        default: "ubuntu-latest"
      export_conan_cache:
        required: false
        type: boolean
        default: false
      import_conan_cache:
        required: false
        type: boolean
        default: false
      conan_host_profile:
        required: false
        type: string
      conan_build_profile:
        required: false
        type: string
      conan_host_profile_path:
        required: false
        type: string
      conan_build_profile_path:
        required: false
        type: string
      conan_recipe_path:
        required: false
        type: string
        default: "./"
      conan_remotes:
        required: false
        type: string
      conan_options:
        required: false
        type: string
      conan_build_require:
        required: false
        type: boolean
        default: false
      conan_deploy_artifacts:
        required: false
        type: boolean

jobs:
  create:
    name: ${{ inputs.name }}
    runs-on: ${{ inputs.image }}
    steps:
      #- name: "Get workflow version"
      #  id: workflow-version
      #  uses: canonical/get-workflow-version-action@a5d53b08d254a157ea441c9819ea5002ffc12edc
      #  with:
      #    # Repository where reusable workflow is located
      #    repository-name: Privatehive/conan-workflows
      #    # Name of reusable workflow
      #    file-name: createPackage.yaml
      - uses: jlumbroso/free-disk-space@v1.3.1
        if: ${{ runner.os == 'Linux' && runner.environment == 'github-hosted' }}
        with:
          swap-storage: false
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.8'
      - name: "Install conan"
        run: pip install conan==2.20.0
      - name: "Download conan cache"
        if: ${{ inputs.import_conan_cache }}
        uses: actions/cache@v4
        with:
          path: conan_cache.tgz
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: "Import conan cache"
        if: ${{ inputs.import_conan_cache }}
        run: |
          conan cache restore conan_cache.tgz
          python -c "import os; os.remove('conan_cache.tgz')"
      - name: "Clone repository"
        uses: actions/checkout@v4
      - name: "Clone conan workflow helper"
        uses: actions/checkout@v4
        with:
          repository: "Privatehive/conan-workflows"
          path: 'conan_workflow_helper'
          ref: 'master'
      - name: "Conan create package"
        run: python ./conan_workflow_helper/.github/actions/build.py
        env:
          CONAN_HOST_PROFILE_PATH: ${{ inputs.conan_host_profile != '' && format('conan_workflow_helper/hostProfiles/{0}.{1}', inputs.conan_host_profile, 'profile') || (inputs.conan_host_profile_path != '' && inputs.conan_host_profile_path || '') }}
          CONAN_BUILD_PROFILE_PATH: ${{ inputs.conan_build_profile != '' && format('conan_workflow_helper/hostProfiles/{0}.{1}', inputs.conan_build_profile, 'profile') || (inputs.conan_build_profile_path != '' && inputs.conan_build_profile_path || '') }}
          CONAN_RECIPE_PATH: ${{ inputs.conan_recipe_path }}
          CONAN_REMOTES: ${{ inputs.conan_remotes }}
          CONAN_OPTIONS: ${{ inputs.conan_options }}
          CONAN_BUILD_REQUIRE: ${{ inputs.conan_build_require }}
          CONAN_DEPLOY_PATH: ${{ inputs.conan_deploy_artifacts && './artifacts_out' || '' }}
      - name: "Upload artifacts"
        if: ${{ inputs.conan_deploy_artifacts }}
        uses: actions/upload-artifact@v4
        with:
          name: conan-package-artifacts
          path: ./artifacts_out
          overwrite: true
      - name: "Export conan cache"
        if: ${{ inputs.export_conan_cache }}
        run: conan cache save --file conan_cache.tgz "*/*:*"
      - name: "Upload conan cache"
        if: ${{ inputs.export_conan_cache }}
        uses: actions/cache@v4
        with:
          path: conan_cache.tgz
          key: ${{ runner.os }}-${{ github.sha }}
