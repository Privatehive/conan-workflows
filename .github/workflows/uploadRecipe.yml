name: "Upload Conan Recipe"
on:
  workflow_call:
    inputs:
      import_conan_cache:
        required: false
        type: boolean
        default: false
      conan_recipe_path:
        required: false
        type: string
        default: "./"
      conan_upload_remote:
        required: false
        type: string
      upload_include_package:
        required: false
        type: boolean
        default: false
      publish_property:
        required: false
        type: boolean
        default: true
    secrets:
      conan_upload_password:
        required: false
      conan_upload_login:
        required: false
      install_token_app_id:
        required: false
      install_token_secret:
        required: false

jobs:
  upload:
    name: "Upload recipe"
    runs-on: ubuntu-latest
    outputs:
      package_ref: ${{ steps.cache-package-ref.outputs.package_ref }}
    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12.8'
      - name: "Install conan"
        run: pip install conan==2.20.0
      - name: "Download conan cache"
        if: ${{ inputs.import_conan_cache }}
        uses: actions/cache@v4
        with:
          path: conan_cache.tgz
          key: ${{ runner.os }}-${{ github.sha }}
          fail-on-cache-miss: true
      - name: "Import conan cache"
        if: ${{ inputs.import_conan_cache }}
        run: |
          conan cache restore conan_cache.tgz
          python -c "import os; os.remove('conan_cache.tgz')"
      - name: "Clone repository"
        uses: actions/checkout@v4
      - name: "Clone conan workflow helper"
        uses: actions/checkout@v4
        with:
          repository: "Privatehive/conan-workflows"
          path: 'conan_workflow_helper'
          ref: 'master'
      - name: "Upload"
        run: python ./conan_workflow_helper/.github/actions/upload.py
        env:
          UPLOAD_ALL: ${{ inputs.upload_include_package }}
          CONAN_RECIPE_PATH: ${{ inputs.conan_recipe_path }}
          CONAN_UPLOAD: ${{ inputs.conan_upload_remote }}
          CONAN_PASSWORD: ${{ secrets.conan_upload_password }}
          CONAN_LOGIN_USERNAME: ${{ secrets.conan_upload_login }}
      - name: "Set package ref output"
        id: cache-package-ref
        run: echo "package_ref=$(cat conan_package_ref)" >> "$GITHUB_OUTPUT"
      - name: "Generate install token"
        id: generate-token
        if: ${{ inputs.publish_property }}
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.install_token_app_id }}
          private-key: ${{ secrets.install_token_secret }}
      - name: 'Set repo property "conan-package"'
        if:  ${{ inputs.publish_property }}
        run: "curl -L -X PATCH -H 'Accept: application/vnd.github+json' -H 'Authorization: Bearer ${{ steps.generate-token.outputs.token }}' -H 'X-GitHub-Api-Version: 2022-11-28' https://api.github.com/repos/${{ github.repository }}/properties/values -d '{\"properties\": [{\"property_name\":\"conan-package\",\"value\":\"${{ steps.cache-package-ref.outputs.package_ref }}\"}]}'"
